name: Continuous Integration

on: [push]

jobs:
  py_setup:
  
    name: 'Setup Python'

    runs-on: ubuntu-latest
        
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: student_project
        environment-file: environment.yml
        python-version: 3.6
        auto-activate-base: false   
        
  R_setup:
    needs: py_setup
    
    name: 'Setup R environment'
    
    env:
        RENV_PATHS_ROOT: .local/share/renv
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: r-lib/actions/setup-r@v1
      with:
         r-version: '4.1.0'
     
    - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      shell: Rscript {0}

    - name: Restore R package cache
      uses: actions/cache@v2
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: |
        while read -r cmd
        do
          eval sudo $cmd
        done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
        
    - name: Initialize IR_kernel
      shell: Rscript {0}
      run: IRkernel::installspec()
       
  build:
    needs: [py_setup, R_setup]
    
    runs-on: ubuntu-latest
    steps:
    - name: execute notebooks
      shell: bash -l {0}
      run: |
         export PATH="$PATH:/usr/share/miniconda/bin"
         source .envrc
         jupyter nbconvert --to html --execute --ExecutePreprocessor.timeout=120 *.ipynb
      
